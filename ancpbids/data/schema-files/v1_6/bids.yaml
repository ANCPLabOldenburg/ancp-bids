Dataset:
  .extends: Folder
  subjects: list(include('Subject'), required=False, name_pattern='sub-.*')
  dataset_description: include('DatasetDescriptionFile')
  README: include('File', required=False)
  CHANGES: include('File', required=False)
  LICENSE: include('File', required=False)
  genetic_info: include('JsonFile', required=False)
  samples: include('JsonFile', required=False)
  participants_tsv: include('ParticipantsTsvFile', required=False)
  participants_json: include('TsvSidecarFile', required=False)
  code: include('Folder', required=False)
  derivatives: include('DerivativeFolder', required=False)
  sourcedata: include('Folder', required=False)
  stimuli: include('Folder', required=False)

---
MetadataFieldDefinition:
  name: str()
  description: str()
  type: map()

SuffixDefinition:
  name: str()
  description: str()
  type: map()

EntitiyDefinition:
  key: str()
  name: str()
  entity: str()
  description: str()
  type: map()

File:
  name: str()
  extension: str(required=False)
  uri: str(required=False)

Folder:
  name: str()
  files: list(include('File'), required=False)
  folders: list(include('Folder'), required=False)

JsonFile:
  .extends: File
  contents: map(required=False)

EntityRef:
  key: str()
  value: str()

Artifact:
  .doc: >-
    An artifact is a file whose name conforms to the BIDS file naming convention.
  .extends: File
  suffix: str()
  entities: list(include('EntityRef'))

DatasetDescriptionFile:
  .extends: JsonFile
  Name: str()
  BIDSVersion: str()
  HEDVersion: str(required=False, recommended=True)
  DatasetType: enum('raw', 'derivative', required=False, recommended=True)
  License: str(required=False, recommended=True)
  Acknowledgements: str(required=False)
  HowToAcknowledge: str(required=False)
  DatasetDOI: str(required=False)
  Authors: list(str(), required=False)
  Funding: list(str(), required=False)
  EthicsApprovals: list(str(), required=False)
  ReferencesAndLinks: list(str(), required=False)

DerivativeDatasetDescriptionFile:
  .extends: DatasetDescriptionFile
  GeneratedBy: list(include('GeneratedBy'))
  SourceDatasets: list(include('SourceDatasets'), required=False, recommended=True)

DerivativeFolder:
  .extends: Folder
  dataset_description: include('DerivativeDatasetDescriptionFile', required=False)
  derivatives: list(include('DerivativeFolder'), required=False)

Session:
  .extends: Folder
  datatypes: list(include('DatatypeFolder'), required=False)

DatatypeFolder:
  .extends: Folder
  artifacts: list(include('Artifact'), required=False)

Subject:
  .extends: Folder
  datatypes: list(include('DatatypeFolder', required=False))
  sessions: list(include('Session'), required=False, name_pattern='ses-.*')

GeneratedBy:
  Name: str()
  Version: str(required=False, recommended=True)
  Description: str(required=False)
  CodeURL: str(required=False)
  Container: list(include('GeneratedByContainer'), required=False)

SourceDatasets:
  DOI: str()
  URL: str()
  Version: str()

GeneratedByContainer:
  Type: str(required=False)
  Tag: str(required=False)
  URI: str(required=False)

ParticipantsTsvFile:
  entries: list(include('ParticipantsTsvFilEentry'))

ParticipantsTsvFilEentry:
  participant_id: str()
  age: num(required=False)
  sex: enum('m', 'M', 'male', 'Male', 'MALE', 'f', 'F', 'female', 'Female', 'FEMALE', 'o', 'O', 'other', 'Other', 'OTHER', required=False)
  handedness: enum('l', 'L', 'Left', 'LEFT', 'r', 'R', 'Right', 'RIGHT', 'ambidextrous', 'AMBIDEXTROUS', 'Ambidextrous', required=False)

TsvSidecarFile:
  columns: list(include('SidecarColumnDescriptor'))

SidecarColumnDescriptor:
  Name: str()
  LongName: str(required=False)
  Description: str(required=False)
  Units: str(required=False)
  TermURL: str(required=False)
  Levels: list(include('KeyValuePair'), required=False)

KeyValuePair:
  key: str()
  value: str()